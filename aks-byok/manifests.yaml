apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: contact@zeet.co
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod-account-key
    solvers:
      - http01:
          ingress:
            class: traefik
      - selector:
          matchLabels:
            use-dns-challenge: "true"
        dns01:
          azureDNS:
            hostedZoneName: ${AZURE_ZONE_NAME}
            resourceGroupName: ${AZURE_RESOURCE_GROUP}
            subscriptionID: ${AZURE_SUBSCRIPTION_ID}
            environment: AzurePublicCloud
            managedIdentity:
              clientID: ${USER_ASSIGNED_IDENTITY_CLIENT_ID}
---
apiVersion: v1
kind: Secret
metadata:
  namespace: cert-manager
  name: azure-secrects
data:
  tenantId: ${AZURE_TENENT_ID}
  subscriptionId: ${AZURE_SUBSCRIPTION_ID}
  resourceGroup: ${AZURE_RESOURCE_GROUP}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: zeet-app-cert
  namespace: traefik
  labels:
    use-dns-challenge: "true"
spec:
  dnsNames:
    - "${CLUSTER_DOMAIN}"
    - "*.${CLUSTER_DOMAIN}"
  secretName: zeet-app-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSStore
metadata:
  name: default
  namespace: traefik
spec:
  defaultCertificate:
    secretName: zeet-app-cert
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: ssl-redirect
  namespace: traefik
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: zeet-auth
  namespace: traefik
spec:
  basicAuth:
    secret: zeet-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: zeet-auth
  namespace: traefik
data:
  users: ${PROMETHEUS_AUTH}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: cert-manager
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["azure-secrects"]
  verbs: ["get", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: cert-manager
  name: external-dns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-dns
subjects:
  - kind: ServiceAccount
    name: external-dns
